---

- hosts: consul_instances
  become: true
  become_method: sudo
  any_errors_fatal: true
  gather_facts: true
  vars_files:
    - vars/main.yml
    - vars/system.yml
  environment: "{{ proxy_env | default({}) }}"

  pre_tasks:
    - name: Include OS-specific variables
      include_vars: "vars/{{ ansible_os_family }}.yml"
      when: not ansible_os_family == 'Rocky' and not ansible_os_family == 'AlmaLinux'
      tags: always

    # For compatibility with Ansible old versions
    # (support for RockyLinux and AlmaLinux has been added to Ansible 2.11)
    - name: Include OS-specific variables
      include_vars: "vars/RedHat.yml"
      when: ansible_os_family == 'Rocky' or ansible_os_family == 'AlmaLinux'
      tags: always

    - name: Update apt cache
      apt:
        update_cache: true
        cache_valid_time: 3600
      when: ansible_os_family == "Debian" and installation_method == "repo"

    - name: Make sure the gnupg and apt-transport-https packages are present
      apt:
        pkg:
          - gnupg
          - apt-transport-https
        state: present
      when: ansible_os_family == "Debian" and installation_method == "repo"

    - name: Build a firewall_ports_dynamic_var
      set_fact:
        firewall_ports_dynamic_var: "{{ firewall_ports_dynamic_var | default([]) + (firewall_allowed_tcp_ports_for[item]) }}"
      loop: "{{ hostvars[inventory_hostname].group_names }}"
      when: firewall_enabled_at_boot|bool
      tags: firewall

    - name: Build a firewall_rules_dynamic_var
      set_fact:
        firewall_rules_dynamic_var: "{{ firewall_rules_dynamic_var | default([]) + (firewall_additional_rules_for[item]) }}"
      loop: "{{ hostvars[inventory_hostname].group_names }}"
      when: firewall_enabled_at_boot|bool
      tags: firewall

    - name: Check if the consul role requirements (ansible.utils) are installed
      shell: |
        set -o pipefail;
        ansible-galaxy collection list | grep -c ansible.utils
      args:
        executable: /bin/bash
      changed_when: false
      register: ansible_utils_result
      run_once: true
      delegate_to: 127.0.0.1

    - name: Install consul role requirements (ansible.utils)
      command: ansible-galaxy install -r roles/consul/requirements.yml
      run_once: true
      delegate_to: 127.0.0.1
      when:
        - ansible_utils_result.stdout is defined
        - ansible_utils_result.stdout == 0

  roles:
    - role: ansible-role-firewall
      vars:
        firewall_allowed_tcp_ports: "{{ firewall_ports_dynamic_var | unique }}"
        firewall_additional_rules: "{{ firewall_rules_dynamic_var | unique }}"
      when: firewall_enabled_at_boot|bool
      tags: firewall

    - role: hostname
    - role: etc_hosts
    - role: timezone
    - role: ntp

    - role: consul

...
