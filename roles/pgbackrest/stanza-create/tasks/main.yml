---

- name: Get repo1-path value
  set_fact:
    repo1_path: "{{ pgbackrest_conf['global'] | selectattr('option', 'equalto', 'repo1-path') | map(attribute='value') | list | first }}"
  tags: pgbackrest, pgbackrest_stanza_create

# Create a stanza locally (if "pgbackrest_repo_host" is not set)
- block:
    - name: "Make sure the {{ repo1_path }} directory exists"
      file:
        path: "{{ repo1_path }}"
        state: directory
        owner: postgres
        group: postgres
        mode: 0755
      when: repo1_path | length > 0

    - name: Create stanza "{{ pgbackrest_stanza }}"
      become: true
      become_user: postgres
      command: "pgbackrest --stanza={{ pgbackrest_stanza }} --no-online stanza-create"
      register: stanza_create_result
      changed_when:
        - stanza_create_result.rc == 0
        - stanza_create_result.stdout is not search("already exists")
  when:
    - pgbackrest_repo_host | length < 1
    - "'postgres_cluster' in group_names"
  tags: pgbackrest, pgbackrest_stanza_create

# Create a stanza on the dedicated repository host
- block:
    - name: "Make sure the {{ repo1_path }} directory exists"
      file:
        path: "{{ repo1_path }}"
        state: directory
        owner: "{{ pgbackrest_repo_user }}"
        group: "{{ pgbackrest_repo_user }}"
        mode: 0755
      when: repo1_path | length > 0

    - name: Create stanza "{{ pgbackrest_stanza }}"
      become: true
      become_user: "{{ pgbackrest_repo_user }}"
      delegate_to: "{{ groups['pgbackret'][0] }}"
      run_once: true
      command: "pgbackrest --stanza={{ pgbackrest_stanza }} stanza-create"
      register: stanza_create_result
      changed_when:
        - stanza_create_result.rc == 0
        - stanza_create_result.stdout is not search("already exists")
  when:
    - pgbackrest_repo_host | length > 0
    - "'pgbackrest' in group_names"
  tags: pgbackrest, pgbackrest_stanza_create

...
