---
- name: Ensure config directory "{{ pgbouncer_conf_dir }}" exist
  file:
    path: "{{ pgbouncer_conf_dir }}"
    state: directory
    owner: postgres
    group: postgres
    mode: 0750
  tags: pgbouncer, pgbouncer_conf

- name: Calculate pgbouncer total pool size
  set_fact:
    total_pool_size: "{{ total_pool_size|default(0)|int + item.pool_parameters | regex_replace ('[^0-9]') | int }}"
  loop: "{{ pgbouncer_pools }}"
  tags: pgbouncer_conf, pgbouncer

- name: Get postgresql max_connections parameter
  set_fact:
    max_connections: "{{ item.value }}"
  when: item.option == "max_connections"
  loop: "{{ postgresql_parameters }}"
  tags: pgbouncer_conf, pgbouncer

- name: Failed when total_pool_size > max_connections
  fail:
    msg: "total_pool_size: {{ total_pool_size  }} > max_connections: {{ max_connections }}. Need change settings"
  when: pgbouncer_pools is defined and pgbouncer_pools | length > 0 and total_pool_size > max_connections
  tags: pgbouncer_conf, pgbouncer

- name: Update pgbouncer.ini
  template:
    src: ../templates/pgbouncer.ini.j2
    dest: "{{ pgbouncer_conf_dir }}/pgbouncer.ini"
    owner: postgres
    group: postgres
    mode: 0640
  notify: "restart pgbouncer"
  when: existing_pgcluster is not defined or not existing_pgcluster|bool
  tags: pgbouncer, pgbouncer_conf

- name: Get users and password md5 from pg_shadow
  run_once: true
  become: true
  become_user: postgres
  command: >
    {{ postgresql_bin_dir }}/psql -p {{ postgresql_port }} -U {{ patroni_superuser_username }} -d postgres -Atq
    -c "SELECT concat('\"', usename, '\" \"', passwd, '\"') FROM pg_shadow where usename != '{{ patroni_replication_username }}'"
  register: pg_shadow_result
  changed_when: false
  delegate_to: "{{ groups.master[0] }}"
  when: pgbouncer_generate_userlist|bool
  tags: pgbouncer, pgbouncer_generate_userlist

- name: Generate /etc/pgbouncer/userlist.txt
  become: true
  become_user: postgres
  copy:
    content: |
      {{ pg_shadow_result.stdout }}

    dest: /etc/pgbouncer/userlist.txt
  notify: "reload pgbouncer"
  when:
    - pg_shadow_result.rc == 0
    - pg_shadow_result.stdout is defined
    - pg_shadow_result.stdout | length > 0
    - pgbouncer_generate_userlist|bool
  tags: pgbouncer, pgbouncer_generate_userlist

...
